module.exports=function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=10)}([function(e,n,t){"use strict";e.exports=t(4)},function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var a=(o=r,i=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),"/*# ".concat(l," */")),A=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(A).concat([a]).join("\n")}var o,i,l;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var A=0;A<this.length;A++){var o=this[A][0];null!=o&&(a[o]=!0)}for(var i=0;i<e.length;i++){var l=[].concat(e[i]);r&&a[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),n.push(l))}},n}},function(e,n,t){"use strict";var r,a=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},A=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),o=[];function i(e){for(var n=-1,t=0;t<o.length;t++)if(o[t].identifier===e){n=t;break}return n}function l(e,n){for(var t={},r=[],a=0;a<e.length;a++){var A=e[a],l=n.base?A[0]+n.base:A[0],c=t[l]||0,C="".concat(l," ").concat(c);t[l]=c+1;var d=i(C),s={css:A[1],media:A[2],sourceMap:A[3]};-1!==d?(o[d].references++,o[d].updater(s)):o.push({identifier:C,updater:b(s,n),references:1}),r.push(C)}return r}function c(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=t.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var o=A(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}return n}var C,d=(C=[],function(e,n){return C[e]=n,C.filter(Boolean).join("\n")});function s(e,n,t,r){var a=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=d(n,a);else{var A=document.createTextNode(a),o=e.childNodes;o[n]&&e.removeChild(o[n]),o.length?e.insertBefore(A,o[n]):e.appendChild(A)}}function u(e,n,t){var r=t.css,a=t.media,A=t.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),A&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,f=0;function b(e,n){var t,r,a;if(n.singleton){var A=f++;t=p||(p=c(n)),r=s.bind(null,t,A,!1),a=s.bind(null,t,A,!0)}else t=c(n),r=u.bind(null,t,n),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else a()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=a());var t=l(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var a=i(t[r]);o[a].references--}for(var A=l(e,n),c=0;c<t.length;c++){var C=i(t[c]);0===o[C].references&&(o[C].updater(),o.splice(C,1))}t=A}}}},,function(e,n,t){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=t(5),a="function"==typeof Symbol&&Symbol.for,A=a?Symbol.for("react.element"):60103,o=a?Symbol.for("react.portal"):60106,i=a?Symbol.for("react.fragment"):60107,l=a?Symbol.for("react.strict_mode"):60108,c=a?Symbol.for("react.profiler"):60114,C=a?Symbol.for("react.provider"):60109,d=a?Symbol.for("react.context"):60110,s=a?Symbol.for("react.forward_ref"):60112,u=a?Symbol.for("react.suspense"):60113,p=a?Symbol.for("react.memo"):60115,f=a?Symbol.for("react.lazy"):60116,b="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function g(e,n,t){this.props=e,this.context=n,this.refs=x,this.updater=t||m}function y(){}function v(e,n,t){this.props=e,this.context=n,this.refs=x,this.updater=t||m}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var B=v.prototype=new y;B.constructor=v,r(B,g.prototype),B.isPureReactComponent=!0;var k={current:null},E=Object.prototype.hasOwnProperty,w={key:!0,ref:!0,__self:!0,__source:!0};function R(e,n,t){var r,a={},o=null,i=null;if(null!=n)for(r in void 0!==n.ref&&(i=n.ref),void 0!==n.key&&(o=""+n.key),n)E.call(n,r)&&!w.hasOwnProperty(r)&&(a[r]=n[r]);var l=arguments.length-2;if(1===l)a.children=t;else if(1<l){for(var c=Array(l),C=0;C<l;C++)c[C]=arguments[C+2];a.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===a[r]&&(a[r]=l[r]);return{$$typeof:A,type:e,key:o,ref:i,props:a,_owner:k.current}}function F(e){return"object"==typeof e&&null!==e&&e.$$typeof===A}var N=/\/+/g,O=[];function S(e,n,t,r){if(O.length){var a=O.pop();return a.result=e,a.keyPrefix=n,a.func=t,a.context=r,a.count=0,a}return{result:e,keyPrefix:n,func:t,context:r,count:0}}function W(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function D(e,n,t){return null==e?0:function e(n,t,r,a){var i=typeof n;"undefined"!==i&&"boolean"!==i||(n=null);var l=!1;if(null===n)l=!0;else switch(i){case"string":case"number":l=!0;break;case"object":switch(n.$$typeof){case A:case o:l=!0}}if(l)return r(a,n,""===t?"."+M(n,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(n))for(var c=0;c<n.length;c++){var C=t+M(i=n[c],c);l+=e(i,C,r,a)}else if(null===n||"object"!=typeof n?C=null:C="function"==typeof(C=b&&n[b]||n["@@iterator"])?C:null,"function"==typeof C)for(n=C.call(n),c=0;!(i=n.next()).done;)l+=e(i=i.value,C=t+M(i,c++),r,a);else if("object"===i)throw r=""+n,Error(h(31,"[object Object]"===r?"object with keys {"+Object.keys(n).join(", ")+"}":r,""));return l}(e,"",n,t)}function M(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return n[e]}))}(e.key):n.toString(36)}function j(e,n){e.func.call(e.context,n,e.count++)}function I(e,n,t){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,n,e.count++),Array.isArray(e)?_(e,r,t,(function(e){return e})):null!=e&&(F(e)&&(e=function(e,n){return{$$typeof:A,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||n&&n.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+t)),r.push(e))}function _(e,n,t,r,a){var A="";null!=t&&(A=(""+t).replace(N,"$&/")+"/"),D(e,I,n=S(n,A,r,a)),W(n)}var L={current:null};function U(){var e=L.current;if(null===e)throw Error(h(321));return e}var P={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:k,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:function(e,n,t){if(null==e)return e;var r=[];return _(e,r,null,n,t),r},forEach:function(e,n,t){if(null==e)return e;D(e,j,n=S(null,null,n,t)),W(n)},count:function(e){return D(e,(function(){return null}),null)},toArray:function(e){var n=[];return _(e,n,null,(function(e){return e})),n},only:function(e){if(!F(e))throw Error(h(143));return e}},n.Component=g,n.Fragment=i,n.Profiler=c,n.PureComponent=v,n.StrictMode=l,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=P,n.cloneElement=function(e,n,t){if(null==e)throw Error(h(267,e));var a=r({},e.props),o=e.key,i=e.ref,l=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,l=k.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(C in n)E.call(n,C)&&!w.hasOwnProperty(C)&&(a[C]=void 0===n[C]&&void 0!==c?c[C]:n[C])}var C=arguments.length-2;if(1===C)a.children=t;else if(1<C){c=Array(C);for(var d=0;d<C;d++)c[d]=arguments[d+2];a.children=c}return{$$typeof:A,type:e.type,key:o,ref:i,props:a,_owner:l}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:d,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:C,_context:e},e.Consumer=e},n.createElement=R,n.createFactory=function(e){var n=R.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:s,render:e}},n.isValidElement=F,n.lazy=function(e){return{$$typeof:f,_ctor:e,_status:-1,_result:null}},n.memo=function(e,n){return{$$typeof:p,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return U().useCallback(e,n)},n.useContext=function(e,n){return U().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return U().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return U().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return U().useLayoutEffect(e,n)},n.useMemo=function(e,n){return U().useMemo(e,n)},n.useReducer=function(e,n,t){return U().useReducer(e,n,t)},n.useRef=function(e){return U().useRef(e)},n.useState=function(e){return U().useState(e)},n.version="16.13.1"},function(e,n,t){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,n){for(var t,i,l=o(e),c=1;c<arguments.length;c++){for(var C in t=Object(arguments[c]))a.call(t,C)&&(l[C]=t[C]);if(r){i=r(t);for(var d=0;d<i.length;d++)A.call(t,i[d])&&(l[i[d]]=t[i[d]])}}return l}},function(e,n,t){var r=t(2),a=t(7);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var A={insert:"head",singleton:!1};r(a,A);e.exports=a.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r)()(!0);a.push([e.i,":root{--red-1: #FC4444;--red-2: #FD373E;--red-3: #FE2539;--red-4: #FF0034;--pink-1: #FE9DBE;--pink-2: #FF7BBA;--pink-3: #FF53BC;--pink-4: #FF00C3;--purple-1: #CCABDA;--purple-2: #DA96EB;--purple-3: #EB7CF7;--purple-4: #FF55FF;--indigo-1: #346FB0;--indigo-2: #2C8ACC;--indigo-3: #1DA6E6;--indigo-4: #00C2FF;--blue-1: #A1CADC;--blue-2: #88D1EA;--blue-3: #63D9F6;--blue-4: #00E1FF;--green-1: #3EC895;--green-2: #24D088;--green-3: #07D877;--green-4: #00DF61;--teal-1: #3AADA8;--teal-2: #33BFBB;--teal-3: #26D1D0;--teal-4: #00E3E5;--yellow-1: #FFDD95;--yellow-2: #F7CC6E;--yellow-3: #EFBB44;--yellow-4: #E6AA00;--orange-1: #FC887B;--orange-2: #FF6C62;--orange-3: #FF4A49;--orange-4: #FF0032;--gray: #949494;--gray-0: #949494;--gray-1: #7F7F7F;--gray-2: #6B6B6B;--gray-blue-1: #607D8B;--gray-blue-2: #425F6D;--gray-blue-3: #244351;--gray-blue-4: #042936;--black-1: #1C1C1C;--black-2: #2F2F2F;--black-3: #424242;--black-4: #575757;--white: #FFFF}","",{version:3,sources:["/Users/fernandogarciacorona/Desktop/tesis.nosync/crown/src/Common/Styles/colors.scss"],names:[],mappings:"AAAA,MACI,gBAAA,CACA,gBAAA,CACA,gBAAA,CACA,gBAAA,CAEA,iBAAA,CACA,iBAAA,CACA,iBAAA,CACA,iBAAA,CAEA,mBAAA,CACA,mBAAA,CACA,mBAAA,CACA,mBAAA,CAEA,mBAAA,CACA,mBAAA,CACA,mBAAA,CACA,mBAAA,CAEA,iBAAA,CACA,iBAAA,CACA,iBAAA,CACA,iBAAA,CAEA,kBAAA,CACA,kBAAA,CACA,kBAAA,CACA,kBAAA,CAEA,iBAAA,CACA,iBAAA,CACA,iBAAA,CACA,iBAAA,CAEA,mBAAA,CACA,mBAAA,CACA,mBAAA,CACA,mBAAA,CAEA,mBAAA,CACA,mBAAA,CACA,mBAAA,CACA,mBAAA,CAEA,eAAA,CACA,iBAAA,CACA,iBAAA,CACA,iBAAA,CAEA,sBAAA,CACA,sBAAA,CACA,sBAAA,CACA,sBAAA,CAEA,kBAAA,CACA,kBAAA,CACA,kBAAA,CACA,kBAAA,CAEA,cAAA",file:"colors.scss",sourcesContent:[":root {\n    --red-1: #FC4444;\n    --red-2: #FD373E;\n    --red-3: #FE2539;\n    --red-4: #FF0034;\n    \n    --pink-1: #FE9DBE;\n    --pink-2: #FF7BBA;\n    --pink-3: #FF53BC;\n    --pink-4: #FF00C3;\n    \n    --purple-1: #CCABDA;\n    --purple-2: #DA96EB;\n    --purple-3: #EB7CF7;\n    --purple-4: #FF55FF;\n    \n    --indigo-1: #346FB0;\n    --indigo-2: #2C8ACC;\n    --indigo-3: #1DA6E6;\n    --indigo-4: #00C2FF;\n    \n    --blue-1: #A1CADC;\n    --blue-2: #88D1EA;\n    --blue-3: #63D9F6;\n    --blue-4: #00E1FF;\n    \n    --green-1: #3EC895;\n    --green-2: #24D088;\n    --green-3: #07D877;\n    --green-4: #00DF61;\n    \n    --teal-1: #3AADA8;\n    --teal-2: #33BFBB;\n    --teal-3: #26D1D0;\n    --teal-4: #00E3E5;\n    \n    --yellow-1: #FFDD95;\n    --yellow-2: #F7CC6E;\n    --yellow-3: #EFBB44;\n    --yellow-4: #E6AA00;\n    \n    --orange-1: #FC887B;\n    --orange-2: #FF6C62;\n    --orange-3: #FF4A49;\n    --orange-4: #FF0032;\n    \n    --gray: #949494;\n    --gray-0: #949494;\n    --gray-1: #7F7F7F;\n    --gray-2: #6B6B6B;\n\n    --gray-blue-1: #607D8B;\n    --gray-blue-2: #425F6D;\n    --gray-blue-3: #244351;\n    --gray-blue-4: #042936;\n\n    --black-1: #1C1C1C;\n    --black-2: #2F2F2F;\n    --black-3: #424242;\n    --black-4: #575757;\n\n    --white: #FFFF;\n    \n}\n    "]}]),n.default=a},function(e,n,t){var r=t(2),a=t(9);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var A={insert:"head",singleton:!1};r(a,A);e.exports=a.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r)()(!0);a.push([e.i,'html,body{margin:0 auto;padding:0;border:0}body{font-family:-apple-system,BlinkMacSystemFont,sans-serif;background-color:#f5f5f7}.CROWNButton{font-size:14px;text-align:center;display:inline-block;font-weight:600;width:-webkit-fill-available;margin-top:5px;margin-bottom:5px;padding:15px 30px;cursor:pointer}.CROWNButton.Round{border-radius:30px}.CROWNButton.SemiRound{border-radius:10px}.CROWNButton.Square{border-radius:0px}.CROWNButton:hover{opacity:.9}.CROWNCheckBox{margin-top:5px;display:flex;align-items:center;margin-bottom:5px}.CROWNCheckBox .Label{margin-left:10px}@supports(-webkit-appearance: none) or (-moz-appearance: none){.CROWNCheckBox input[type=checkbox]{--active-inner: #fff;-webkit-appearance:none;-moz-appearance:none;height:21px;outline:none;display:inline-block;vertical-align:top;position:relative;margin:0;cursor:pointer;border:1px solid var(--gray-0);background:var(--b, var(--gray-blue-2));transition:background .3s,border-color .3s,box-shadow .2s}.CROWNCheckBox input[type=checkbox].Active{--active: #ff5722}.CROWNCheckBox input[type=checkbox]:after{content:"";display:block;left:0;top:0;position:absolute;transition:transform var(--d-t, 0.3s) var(--d-t-e, ease),opacity var(--d-o, 0.2s)}.CROWNCheckBox input[type=checkbox]:checked{--b: var(--blue-1);--bc: var(--blue-1);--d-o: .3s;--d-t: .6s;--d-t-e: cubic-bezier(.2, .85, .32, 1.2)}.CROWNCheckBox input[type=checkbox]:not(.switch){width:21px}.CROWNCheckBox input[type=checkbox]:not(.switch):after{opacity:var(--o, 0)}.CROWNCheckBox input[type=checkbox]:not(.switch):checked{--o: 1}.CROWNCheckBox input[type=checkbox]:not(.switch){border-radius:7px}.CROWNCheckBox input[type=checkbox]:not(.switch):after{width:5px;height:9px;border:2px solid var(--active-inner);border-top:0;border-left:0;left:7px;top:4px;transform:rotate(var(--r, 20deg))}.CROWNCheckBox input[type=checkbox]:not(.switch):checked{--r: 43deg}.CROWNCheckBox input[type=checkbox].switch{width:38px;border-radius:11px}.CROWNCheckBox input[type=checkbox].switch:after{left:2px;top:2px;border-radius:50%;width:15px;height:15px;background:var(--ab, var(--border));transform:translateX(var(--x, 0))}.CROWNCheckBox input[type=checkbox].switch:checked{--ab: var(--active-inner);--x: 17px}.CROWNCheckBox input[type=checkbox].switch:disabled:not(:checked):after{opacity:.6}.CROWNCheckBox input[type=radio]{border-radius:50%}.CROWNCheckBox input[type=radio]:after{width:19px;height:19px;border-radius:50%;background:var(--active-inner);opacity:0;transform:scale(var(--s, 0.7))}.CROWNCheckBox input[type=radio]:checked{--s: .5}}input.CROWNInputText{width:100%;font-size:14px;border:2px solid #efeff0;border-radius:8px;margin-top:5px;margin-right:0px;margin-bottom:10px;margin-left:0px;outline:none;padding:10px;box-sizing:border-box;transition:.3s}input.CROWNInputText:focus{border-color:#efeff0;box-shadow:0 0 3px 3px #efeff0}.CROWNLabel{margin-top:10px;margin-right:0px;margin-bottom:5px;margin-left:0px}.CROWNRadioButton{margin-left:5px;margin-bottom:15px}.CROWNRadioButton .Label{margin-left:10px}.CROWNRadioButton label{display:block;position:relative;height:15px;margin-bottom:20px;padding-left:15px;cursor:pointer;font-size:14px;user-select:none;color:var(--black-1)}.CROWNRadioButton input{position:absolute;cursor:pointer;height:0;width:0;left:-2000px}.CROWNRadioButton input:checked~.Radio{background-color:var(--blue-1);transition:background .3s}.CROWNRadioButton input:checked~.Radio::after{opacity:1}.CROWNRadioButton .Radio{position:absolute;top:.2rem;left:0;height:1rem;width:1rem;background:var(--gray-blue-2);border-radius:50%}.CROWNRadioButton .Radio::after{content:"";position:absolute;opacity:0;top:.25rem;left:.25rem;width:.5rem;height:.5rem;border-radius:50%;background:var(--white)}.CROWNSwitch{margin-top:5px;display:flex;align-items:center;height:30px;margin-bottom:5px}.CROWNSwitch .Label{margin-left:10px}.CROWNSwitch .switch{position:relative;display:inline-block;width:40px;height:20px;background-color:var(--gray-blue-2);border-radius:20px;transition:all .3s}.CROWNSwitch .switch::after{content:"";position:absolute;width:18px;height:18px;border-radius:50%;background-color:var(--white);top:1px;left:1px;transition:all .3s}.CROWNSwitch .checkbox:checked+.switch::after{left:20px}.CROWNSwitch .checkbox:checked+.switch.colorSwitch{background-color:var(--blue-1)}.CROWNSwitch .checkbox{display:none}.CROWNTable{border-collapse:collapse;box-shadow:0 0 8px 0 #d3d3d3;border-radius:10px;overflow:hidden;margin-top:5px;margin-bottom:5px;width:100%}.CROWNTable .Header{color:var(--white);background-color:var(--blue-1);height:50px}.CROWNTable .Body{text-align:center;color:var(--gray);height:40px}.CROWNDropDown{position:relative;display:inline-block;border-radius:8px;width:100%;font-size:14px}.CROWNDropDown .ListContent{display:none;position:absolute;background-color:#f9f9f9;min-width:160px;box-shadow:0px 8px 16px 0px rgba(0,0,0,.2);border-radius:8px;padding:12px 16px;z-index:1}.CROWNDropDown .ListContent .Option{padding:10px;border-radius:8px}.CROWNDropDown .ListContent .Option:hover{background-color:var(--gray-blue-2);cursor:pointer}.CROWNDropDown .NoMarginBottom{margin-bottom:0px}.CROWNDropDown .Options{color:var(--black-1);background-color:#f9f9f9;border-radius:8px;margin-bottom:10px;padding:10px 10px;box-shadow:0 0 8px 0 #d3d3d3;margin-top:10px}.CROWNDropDown:hover .ListContent{display:block;width:-webkit-fill-available}.CROWNLoader{position:relative;justify-content:center;display:flex;width:100%;height:40px}.CROWNLoader div{transform-origin:20px 20px;animation:lds-spinner 1.2s linear infinite}.CROWNLoader div:after{content:" ";display:block;position:absolute;top:3px;left:20px;width:3px;height:8px;border-radius:30%;background:var(--gray-blue-3)}.CROWNLoader div:nth-child(1){transform:rotate(0deg);animation-delay:-1.1s}.CROWNLoader div:nth-child(2){transform:rotate(30deg);animation-delay:-1s}.CROWNLoader div:nth-child(3){transform:rotate(60deg);animation-delay:-0.9s}.CROWNLoader div:nth-child(4){transform:rotate(90deg);animation-delay:-0.8s}.CROWNLoader div:nth-child(5){transform:rotate(120deg);animation-delay:-0.7s}.CROWNLoader div:nth-child(6){transform:rotate(150deg);animation-delay:-0.6s}.CROWNLoader div:nth-child(7){transform:rotate(180deg);animation-delay:-0.5s}.CROWNLoader div:nth-child(8){transform:rotate(210deg);animation-delay:-0.4s}.CROWNLoader div:nth-child(9){transform:rotate(240deg);animation-delay:-0.3s}.CROWNLoader div:nth-child(10){transform:rotate(270deg);animation-delay:-0.2s}.CROWNLoader div:nth-child(11){transform:rotate(300deg);animation-delay:-0.1s}.CROWNLoader div:nth-child(12){transform:rotate(330deg);animation-delay:0s}@keyframes lds-spinner{0%{opacity:1}100%{opacity:0}}.CROWNModal{position:fixed;z-index:10;width:100%;height:100%;transition:all .3s;background-color:rgba(255,255,255,.15);backdrop-filter:blur(5px);display:flex;justify-content:center;align-items:center}.CROWNModal .ContainerModal{height:40%;width:40%;background-color:#f5f5f7;border-radius:8px;box-shadow:0 2.8px 2.2px rgba(0,0,0,.034),0 6.7px 5.3px rgba(0,0,0,.048),0 12.5px 10px rgba(0,0,0,.06),0 22.3px 17.9px rgba(0,0,0,.072),0 41.8px 33.4px rgba(0,0,0,.086),0 100px 80px rgba(0,0,0,.12)}@media only screen and (max-width: 768px){.CROWNModal .ContainerModal{height:80%;width:80%}}.CROWNModal .ContainerModal .Modal{padding:15px;height:-webkit-fill-available}.CROWNModal .ContainerModal .Modal .Close{cursor:pointer;display:flex;justify-content:flex-end;color:var(--gray-blue-3);height:5%}.CROWNModal .ContainerModal .Modal .Close:hover{color:var(--black-3)}.CROWNModal .ContainerModal .Modal .Content{height:-webkit-fill-available;margin:15px}.CROWNModal .ContainerModal .Modal .Content .Title{display:flex;justify-content:center;font-size:25px}.CROWNModal .ContainerModal .Modal .Content .Text{margin:15px;height:50%;justify-content:center;display:flex;align-items:center}@media only screen and (max-width: 768px){.CROWNModal .ContainerModal .Modal .Content .Text{height:60%}}.CROWNModal .ContainerModal .Modal .Content .ButtonArea{display:flex}@media only screen and (max-width: 768px){.CROWNModal .ContainerModal .Modal .Content .ButtonArea{display:unset}}.CROWNModal .ContainerModal .Modal .Content .ButtonArea>a{margin-left:10px;margin-bottom:10px}.CROWNCard{width:300px;height:350px;border-radius:10px;box-shadow:0 2.8px 2.2px rgba(0,0,0,.034),0 6.7px 5.3px rgba(0,0,0,.048),0 12.5px 10px rgba(0,0,0,.06),0 22.3px 17.9px rgba(0,0,0,.072),0 41.8px 33.4px rgba(0,0,0,.086),0 100px 80px rgba(0,0,0,.12);margin:10px}.CROWNCard:hover{box-shadow:8px 8px 16px 0 rgba(0,0,0,.2)}.CROWNCard .Card{width:-webkit-fill-available;height:-webkit-fill-available;border-radius:10px}.CROWNCard .Card .Content{width:-webkit-fill-available;height:-webkit-fill-available;background-color:rgba(255,255,255,.15);backdrop-filter:blur(30px);border-radius:10px;position:absolute;bottom:0px;height:50%;box-shadow:1px -7px 6px 1px rgba(0,0,0,.034);padding:10px}.CROWNCard .Card .Content .Title{width:100%;color:var(--white);font-weight:700;text-align:center}.CROWNCard .Card .Content .ContentCard{height:50%;padding:5px}.CROWNImage{border-radius:10px;margin:10px}.CROWNImage:hover{box-shadow:8px 8px 16px 0 rgba(0,0,0,.2)}.CROWNImage .Image{width:-webkit-fill-available;height:-webkit-fill-available}.CROWNImage.Shadow{box-shadow:0 2.8px 2.2px rgba(0,0,0,.034),0 6.7px 5.3px rgba(0,0,0,.048),0 12.5px 10px rgba(0,0,0,.06),0 22.3px 17.9px rgba(0,0,0,.072),0 41.8px 33.4px rgba(0,0,0,.086),0 100px 80px rgba(0,0,0,.12)}.CROWNImage .ImageBlur{width:-webkit-fill-available;height:-webkit-fill-available}.CROWNImage .ImageBlur .Blur{padding:20px;width:-webkit-fill-available;height:-webkit-fill-available;background-color:rgba(255,255,255,.15);backdrop-filter:blur(30px)}',"",{version:3,sources:["/Users/fernandogarciacorona/Desktop/tesis.nosync/crown/src/Common/Styles/main.scss"],names:[],mappings:"AACA,UACI,aAAA,CACA,SAAA,CACA,QAAA,CAGJ,KACE,uDAAA,CACA,wBAAA,CAGF,aACI,cAAA,CACA,iBAAA,CACA,oBAAA,CACA,eAAA,CACA,4BAAA,CACA,cAAA,CACA,iBAAA,CACA,iBAAA,CACA,cAAA,CACA,mBACE,kBAAA,CAEF,uBACE,kBAAA,CAEF,oBACE,iBAAA,CAGN,mBACE,UAAA,CAGF,eACI,cAAA,CACA,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,sBACE,gBAAA,CAEF,+DACE,oCAIE,oBAAA,CACA,uBAAA,CACA,oBAAA,CACA,WAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CACA,iBAAA,CACA,QAAA,CACA,cAAA,CACA,8BAAA,CACA,uCAAA,CACA,yDAAA,CAfA,2CACE,iBAAA,CAeF,0CACE,UAAA,CACA,aAAA,CACA,MAAA,CACA,KAAA,CACA,iBAAA,CACA,iFAAA,CAEF,4CACE,kBAAA,CACA,mBAAA,CACA,UAAA,CACA,UAAA,CACA,wCAAA,CAEF,iDACE,UAAA,CACA,uDACE,mBAAA,CAEF,yDACE,MAAA,CAKJ,iDACE,iBAAA,CACA,uDACE,SAAA,CACA,UAAA,CACA,oCAAA,CACA,YAAA,CACA,aAAA,CACA,QAAA,CACA,OAAA,CACA,iCAAA,CAEF,yDACE,UAAA,CAGJ,2CACE,UAAA,CACA,kBAAA,CACA,iDACE,QAAA,CACA,OAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,mCAAA,CACA,iCAAA,CAEF,mDACE,yBAAA,CACA,SAAA,CAIE,wEACE,UAAA,CAMV,iCACE,iBAAA,CACA,uCACE,UAAA,CACA,WAAA,CACA,iBAAA,CACA,8BAAA,CACA,SAAA,CACA,8BAAA,CAEF,yCACE,OAAA,CAAA,CAMR,qBACE,UAAA,CACA,cAAA,CACA,wBAAA,CACA,iBAAA,CACA,cAAA,CACA,gBAAA,CACA,kBAAA,CACA,eAAA,CACA,YAAA,CACA,YAAA,CACA,qBAAA,CACA,cAAA,CAEF,2BACE,oBAAA,CACA,8BAAA,CAGJ,YACE,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,eAAA,CAIF,kBACE,eAAA,CACA,kBAAA,CACA,yBACE,gBAAA,CAEF,wBACE,aAAA,CACA,iBAAA,CACA,WAAA,CACA,kBAAA,CACA,iBAAA,CACA,cAAA,CACA,cAAA,CACA,gBAAA,CACA,oBAAA,CAEA,wBACE,iBAAA,CACA,cAAA,CACA,QAAA,CACA,OAAA,CACA,YAAA,CAEE,uCACE,8BAAA,CACA,yBAAA,CACA,8CACE,SAAA,CAKR,yBACE,iBAAA,CACA,SAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,6BAAA,CACA,iBAAA,CACA,gCACE,UAAA,CACA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,YAAA,CACA,iBAAA,CACA,uBAAA,CAKN,aACE,cAAA,CACA,YAAA,CACA,kBAAA,CACA,WAAA,CACA,iBAAA,CACA,oBACE,gBAAA,CAEF,qBACE,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,mCAAA,CACA,kBAAA,CACA,kBAAA,CAEF,4BACE,UAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,6BAAA,CACA,OAAA,CACA,QAAA,CACA,kBAAA,CAEF,8CACE,SAAA,CAGA,mDACE,8BAAA,CAGJ,uBACE,YAAA,CAIJ,YACE,wBAAA,CACA,4BAAA,CACA,kBAAA,CACA,eAAA,CACA,cAAA,CACA,iBAAA,CACA,UAAA,CAEA,oBACE,kBAAA,CACA,8BAAA,CACA,WAAA,CAEF,kBACE,iBAAA,CACA,iBAAA,CACA,WAAA,CAIJ,eACE,iBAAA,CACA,oBAAA,CACA,iBAAA,CACA,UAAA,CACA,cAAA,CACA,4BACE,YAAA,CACA,iBAAA,CACA,wBAAA,CACA,eAAA,CACA,0CAAA,CACA,iBAAA,CACA,iBAAA,CACA,SAAA,CACA,oCACE,YAAA,CACA,iBAAA,CAEF,0CACE,mCAAA,CACA,cAAA,CAGJ,+BACE,iBAAA,CAEF,wBACE,oBAAA,CACA,wBAAA,CACA,iBAAA,CACA,kBAAA,CACA,iBAAA,CACA,4BAAA,CACA,eAAA,CAIJ,kCACE,aAAA,CACA,4BAAA,CAGF,aACE,iBAAA,CACA,sBAAA,CACA,YAAA,CACA,UAAA,CACA,WAAA,CACA,iBACE,0BAAA,CACA,0CAAA,CAEF,uBACE,WAAA,CACA,aAAA,CACA,iBAAA,CACA,OAAA,CACA,SAAA,CACA,SAAA,CACA,UAAA,CACA,iBAAA,CACA,6BAAA,CAEF,8BACE,sBAAA,CACA,qBAAA,CAEF,8BACE,uBAAA,CACA,mBAAA,CAEF,8BACE,uBAAA,CACA,qBAAA,CAEF,8BACE,uBAAA,CACA,qBAAA,CAEF,8BACE,wBAAA,CACA,qBAAA,CAEF,8BACE,wBAAA,CACA,qBAAA,CAEF,8BACE,wBAAA,CACA,qBAAA,CAEF,8BACE,wBAAA,CACA,qBAAA,CAEF,8BACE,wBAAA,CACA,qBAAA,CAEF,+BACE,wBAAA,CACA,qBAAA,CAEF,+BACE,wBAAA,CACA,qBAAA,CAEF,+BACE,wBAAA,CACA,kBAAA,CAGJ,uBACE,GACE,SAAA,CAEF,KACE,SAAA,CAAA,CAIJ,YACE,cAAA,CACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,sCAAA,CACA,yBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,4BACE,UAAA,CACA,SAAA,CACA,wBAAA,CACA,iBAAA,CACA,qMACA,CAMA,0CAZF,4BAaI,UAAA,CACA,SAAA,CAAA,CAEF,mCACE,YAAA,CACA,6BAAA,CACA,0CACE,cAAA,CACA,YAAA,CACA,wBAAA,CACA,wBAAA,CACA,SAAA,CACA,gDACE,oBAAA,CAGJ,4CACE,6BAAA,CACA,WAAA,CACA,mDACE,YAAA,CACA,sBAAA,CACA,cAAA,CAEF,kDACE,WAAA,CACA,UAAA,CACA,sBAAA,CACA,YAAA,CACA,kBAAA,CACA,0CANF,kDAOI,UAAA,CAAA,CAGJ,wDACE,YAAA,CACA,0CAFF,wDAGI,aAAA,CAAA,CAGJ,0DACE,gBAAA,CACA,kBAAA,CAOV,WACE,WAAA,CACA,YAAA,CACA,kBAAA,CACA,qMACE,CAMF,WAAA,CACA,iBACE,wCAAA,CAEF,iBACE,4BAAA,CACA,6BAAA,CACA,kBAAA,CACA,0BACE,4BAAA,CACA,6BAAA,CACA,sCAAA,CACA,0BAAA,CACA,kBAAA,CACA,iBAAA,CACA,UAAA,CACA,UAAA,CACA,4CAAA,CACA,YAAA,CACA,iCACE,UAAA,CACA,kBAAA,CACA,eAAA,CACA,iBAAA,CAEF,uCACE,UAAA,CACA,WAAA,CASR,YACE,kBAAA,CACA,WAAA,CACA,kBACE,wCAAA,CAEF,mBACE,4BAAA,CACA,6BAAA,CAEF,mBACE,qMACA,CAOF,uBACE,4BAAA,CACA,6BAAA,CACA,6BACE,YAAA,CACA,4BAAA,CACA,6BAAA,CACA,sCAAA,CACA,0BAAA",file:"main.scss",sourcesContent:["\nhtml, body{\n    margin:0 auto;\n    padding:0;\n    border:0;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  background-color: #f5f5f7;\n}\n\n.CROWNButton {\n    font-size: 14px;\n    text-align: center;\n    display: inline-block;\n    font-weight: 600;\n    width: -webkit-fill-available;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    padding: 15px 30px;\n    cursor: pointer;\n    &.Round{\n      border-radius: 30px;\n    }\n    &.SemiRound{\n      border-radius: 10px;\n    }\n    &.Square{\n      border-radius: 0px;\n    }\n}\n.CROWNButton:hover{\n  opacity: 0.9;\n}\n\n.CROWNCheckBox {\n    margin-top: 5px;\n    display: flex;\n    align-items: center;\n    margin-bottom: 5px;\n    .Label {\n      margin-left: 10px;\n    }\n    @supports(-webkit-appearance: none) or (-moz-appearance: none) {\n      input[type='checkbox']{\n        &.Active {\n          --active: #ff5722;\n        }\n        --active-inner: #fff;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        height: 21px;\n        outline: none;\n        display: inline-block;\n        vertical-align: top;\n        position: relative;\n        margin: 0;\n        cursor: pointer;\n        border: 1px solid var(--gray-0);\n        background: var(--b,  var(--gray-blue-2));\n        transition: background .3s, border-color .3s, box-shadow .2s;\n        &:after {\n          content: '';\n          display: block;\n          left: 0;\n          top: 0;\n          position: absolute;\n          transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);\n        }\n        &:checked {\n          --b: var(--blue-1);\n          --bc: var(--blue-1);\n          --d-o: .3s;\n          --d-t: .6s;\n          --d-t-e: cubic-bezier(.2, .85, .32, 1.2);\n        }\n        &:not(.switch) {\n          width: 21px;\n          &:after {\n            opacity: var(--o, 0);\n          }\n          &:checked {\n            --o: 1;\n          }\n        }\n      }\n      input[type='checkbox'] {\n        &:not(.switch) {\n          border-radius: 7px;\n          &:after {\n            width: 5px;\n            height: 9px;\n            border: 2px solid var(--active-inner);\n            border-top: 0;\n            border-left: 0;\n            left: 7px;\n            top: 4px;\n            transform: rotate(var(--r, 20deg));\n          }\n          &:checked {\n            --r: 43deg;\n          }\n        }\n        &.switch {\n          width: 38px;\n          border-radius: 11px;\n          &:after {\n            left: 2px;\n            top: 2px;\n            border-radius: 50%;\n            width: 15px;\n            height: 15px;\n            background: var(--ab, var(--border));\n            transform: translateX(var(--x, 0));\n          }\n          &:checked {\n            --ab: var(--active-inner);\n            --x: 17px;\n          }\n          &:disabled {\n            &:not(:checked) {\n              &:after {\n                opacity: .6;\n              }\n            }\n          }\n        }\n      }\n      input[type='radio'] {\n        border-radius: 50%;\n        &:after {\n          width: 19px;\n          height: 19px;\n          border-radius: 50%;\n          background: var(--active-inner);\n          opacity: 0;\n          transform: scale(var(--s, .7));\n        }\n        &:checked {\n          --s: .5;\n        }\n      }   \n  }\n}\n\n  input.CROWNInputText {\n    width: 100%;\n    font-size: 14px;\n    border: 2px solid #EFEFF0;\n    border-radius: 8px;\n    margin-top: 5px;\n    margin-right: 0px;\n    margin-bottom: 10px;\n    margin-left: 0px;\n    outline: none;\n    padding: 10px;\n    box-sizing: border-box;\n    transition: 0.3s;\n  }\n  input.CROWNInputText:focus {\n    border-color: #EFEFF0;\n    box-shadow: 0 0 3px 3px #EFEFF0;\n  }\n\n.CROWNLabel {\n  margin-top: 10px;\n  margin-right: 0px;\n  margin-bottom: 5px;\n  margin-left: 0px;\n}\n\n\n.CROWNRadioButton {\n  margin-left: 5px;\n  margin-bottom: 15px;\n  .Label {\n    margin-left: 10px;\n  }\n  label {\n    display: block;\n    position: relative;\n    height: 15px;\n    margin-bottom: 20px;\n    padding-left: 15px;\n    cursor: pointer;\n    font-size: 14px;\n    user-select: none;\n    color: var(--black-1);\n  }  \n    input {\n      position: absolute;\n      cursor: pointer;\n      height: 0;\n      width: 0;\n      left: -2000px;\n      &:checked {\n        ~ .Radio {\n          background-color: var(--blue-1);\n          transition: background .3s;\n          &::after {\n            opacity: 1;\n          }\n        }\n      }\n    }\n    .Radio {\n      position: absolute;\n      top: 0.2rem;\n      left: 0;\n      height: 1rem;\n      width: 1rem;\n      background: var(--gray-blue-2);\n      border-radius: 50%;\n      &::after {\n        content: '';\n        position: absolute;\n        opacity: 0;\n        top: .25rem;\n        left: .25rem;\n        width: .5rem;\n        height: .5rem;\n        border-radius: 50%;\n        background: var(--white);\n      }\n    }\n  }\n\n  .CROWNSwitch {\n    margin-top: 5px;\n    display: flex;\n    align-items: center;\n    height: 30px;\n    margin-bottom: 5px;\n    .Label {\n      margin-left: 10px;\n    }\n    .switch {\n      position: relative;\n      display: inline-block;\n      width: 40px;\n      height: 20px;\n      background-color: var(--gray-blue-2);\n      border-radius: 20px;\n      transition: all 0.3s;\n    }\n    .switch::after {\n      content: '';\n      position: absolute;\n      width: 18px;\n      height: 18px;\n      border-radius:50%;\n      background-color: var(--white);\n      top: 1px;\n      left: 1px;\n      transition: all 0.3s;\n    }\n    .checkbox:checked + .switch::after {\n      left : 20px;\n    }\n    .checkbox:checked + .switch {\n      &.colorSwitch{\n        background-color: var(--blue-1);\n      }\n    }\n    .checkbox {\n      display : none;\n    }\n  }\n\n  .CROWNTable {\n    border-collapse: collapse;\n    box-shadow: 0 0 8px 0 #d3d3d3;\n    border-radius: 10px;\n    overflow: hidden;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    width: 100%;\n  \n    .Header {\n      color: var(--white);\n      background-color: var(--blue-1);\n      height: 50px;\n    }\n    .Body {\n      text-align: center;\n      color: var(--gray);\n      height: 40px;\n    }\n  }\n\n  .CROWNDropDown {\n    position: relative;\n    display: inline-block;\n    border-radius: 8px;\n    width: 100%;\n    font-size: 14px;\n    .ListContent {\n      display: none;\n      position: absolute;\n      background-color: #f9f9f9;\n      min-width: 160px;\n      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n      border-radius: 8px;\n      padding: 12px 16px;\n      z-index: 1;\n      .Option {\n        padding: 10px;\n        border-radius: 8px;\n      }\n      .Option:hover {\n        background-color: var(--gray-blue-2);\n        cursor: pointer;\n      }\n    }\n    .NoMarginBottom {\n      margin-bottom: 0px;\n    }\n    .Options {\n      color: var(--black-1);\n      background-color: #f9f9f9;\n      border-radius: 8px;\n      margin-bottom: 10px;\n      padding: 10px 10px;\n      box-shadow: 0 0 8px 0 #d3d3d3;\n      margin-top: 10px;\n    }\n  }\n  \n  .CROWNDropDown:hover .ListContent {\n    display: block;\n    width: -webkit-fill-available;\n  }\n\n  .CROWNLoader {\n    position: relative;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    height: 40px;\n    div {\n      transform-origin: 20px 20px;\n      animation: lds-spinner 1.2s linear infinite;\n    }\n    div:after {\n      content: \" \";\n      display: block;\n      position: absolute;\n      top: 3px;\n      left: 20px;\n      width: 3px;\n      height: 8px;\n      border-radius: 30%;\n      background: var(--gray-blue-3);\n    }\n    div:nth-child(1) {\n      transform: rotate(0deg);\n      animation-delay: -1.1s;\n    }\n    div:nth-child(2) {\n      transform: rotate(30deg);\n      animation-delay: -1s;\n    }\n    div:nth-child(3) {\n      transform: rotate(60deg);\n      animation-delay: -0.9s;\n    }\n    div:nth-child(4) {\n      transform: rotate(90deg);\n      animation-delay: -0.8s;\n    }\n    div:nth-child(5) {\n      transform: rotate(120deg);\n      animation-delay: -0.7s;\n    }\n    div:nth-child(6) {\n      transform: rotate(150deg);\n      animation-delay: -0.6s;\n    }\n    div:nth-child(7) {\n      transform: rotate(180deg);\n      animation-delay: -0.5s;\n    }\n    div:nth-child(8) {\n      transform: rotate(210deg);\n      animation-delay: -0.4s;\n    }\n    div:nth-child(9) {\n      transform: rotate(240deg);\n      animation-delay: -0.3s;\n    }\n    div:nth-child(10) {\n      transform: rotate(270deg);\n      animation-delay: -0.2s;\n    }\n    div:nth-child(11) {\n      transform: rotate(300deg);\n      animation-delay: -0.1s;\n    }\n    div:nth-child(12) {\n      transform: rotate(330deg);\n      animation-delay: 0s;\n    }\n  }\n  @keyframes lds-spinner {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  .CROWNModal {\n    position: fixed;\n    z-index: 10;\n    width: 100%;\n    height: 100%;\n    transition: all .3s;\n    background-color: rgba(255,255, 255, .15);\n    backdrop-filter: blur(5px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    .ContainerModal {\n      height: 40%;\n      width: 40%;\n      background-color: #f5f5f7;\n      border-radius: 8px;\n      box-shadow:\n      0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n      0 12.5px 10px rgba(0, 0, 0, 0.06),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n      0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n      0 100px 80px rgba(0, 0, 0, 0.12);\n      @media only screen and (max-width: 768px) {\n        height: 80%;\n        width: 80%;\n      }\n      .Modal {\n        padding: 15px;\n        height: -webkit-fill-available;\n        .Close {\n          cursor: pointer;\n          display: flex;\n          justify-content: flex-end;\n          color: var(--gray-blue-3);\n          height: 5%;\n          &:hover {\n            color: var(--black-3);\n          }\n        }\n        .Content {\n          height: -webkit-fill-available;\n          margin: 15px;\n          .Title {\n            display: flex;\n            justify-content: center;\n            font-size: 25px;\n          }\n          .Text {\n            margin: 15px;\n            height: 50%;\n            justify-content: center;\n            display: flex;\n            align-items: center;\n            @media only screen and (max-width: 768px) {\n              height: 60%;\n            }\n          }\n          .ButtonArea {\n            display: flex;\n            @media only screen and (max-width: 768px) {\n              display: unset;\n            }\n          }\n          .ButtonArea > a{\n            margin-left: 10px;\n            margin-bottom: 10px;\n          }\n        }\n      }\n    }\n  }\n\n  .CROWNCard {\n    width: 300px;\n    height: 350px;\n    border-radius: 10px;\n    box-shadow:\n      0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n      0 12.5px 10px rgba(0, 0, 0, 0.06),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n      0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n      0 100px 80px rgba(0, 0, 0, 0.12);\n    margin: 10px;\n    &:hover {\n      box-shadow: 8px 8px 16px 0 rgba(0, 0, 0, 0.2);\n    }\n    .Card {\n      width: -webkit-fill-available;\n      height: -webkit-fill-available;\n      border-radius: 10px;\n      .Content {\n        width: -webkit-fill-available;\n        height: -webkit-fill-available;\n        background-color: rgba(255,255, 255, .15);\n        backdrop-filter: blur(30px);\n        border-radius: 10px;\n        position: absolute;\n        bottom: 0px;\n        height: 50%;\n        box-shadow: 1px -7px 6px 1px rgba(0, 0, 0, 0.034);\n        padding: 10px;\n        .Title {\n          width: 100%;\n          color: var(--white);\n          font-weight: 700;\n          text-align: center;\n        }\n        .ContentCard {\n          height: 50%;\n          padding: 5px;\n        }\n        .Others {\n\n        }\n      }\n    }\n  }\n\n  .CROWNImage {\n    border-radius: 10px;\n    margin: 10px;\n    &:hover {\n      box-shadow: 8px 8px 16px 0 rgba(0, 0, 0, 0.2);\n    }\n    .Image {\n      width: -webkit-fill-available;\n      height: -webkit-fill-available;\n    }\n    &.Shadow {\n      box-shadow:\n      0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n      0 12.5px 10px rgba(0, 0, 0, 0.06),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n      0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n      0 100px 80px rgba(0, 0, 0, 0.12);\n    }\n    .ImageBlur {\n      width: -webkit-fill-available;\n      height: -webkit-fill-available;\n      .Blur {\n        padding: 20px;\n        width: -webkit-fill-available;\n        height: -webkit-fill-available;\n        background-color: rgba(255,255, 255, .15);\n        backdrop-filter: blur(30px);\n      }\n    }\n  }"]}]),n.default=a},function(e,n,t){"use strict";t.r(n),t.d(n,"Switch",(function(){return h})),t.d(n,"CheckBox",(function(){return x})),t.d(n,"DropDown",(function(){return F})),t.d(n,"RadioButton",(function(){return O})),t.d(n,"Table",(function(){return W})),t.d(n,"Loader",(function(){return M})),t.d(n,"Modal",(function(){return L})),t.d(n,"Card",(function(){return P})),t.d(n,"Button",(function(){return I})),t.d(n,"InputText",(function(){return T})),t.d(n,"Label",(function(){return f})),t.d(n,"Image",(function(){return q}));var r=t(0),a=t.n(r),A="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),o=new Uint8Array(16);function i(){if(!A)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return A(o)}var l=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;for(var c=function(e){return"string"==typeof e&&l.test(e)},C=[],d=0;d<256;++d)C.push((d+256).toString(16).substr(1));var s=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=(C[e[n+0]]+C[e[n+1]]+C[e[n+2]]+C[e[n+3]]+"-"+C[e[n+4]]+C[e[n+5]]+"-"+C[e[n+6]]+C[e[n+7]]+"-"+C[e[n+8]]+C[e[n+9]]+"-"+C[e[n+10]]+C[e[n+11]]+C[e[n+12]]+C[e[n+13]]+C[e[n+14]]+C[e[n+15]]).toLowerCase();if(!c(t))throw TypeError("Stringified UUID is invalid");return t};var u=function(e,n,t){var r=(e=e||{}).random||(e.rng||i)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,n){t=t||0;for(var a=0;a<16;++a)n[t+a]=r[a];return n}return s(r)},p=function(e){var n=e.text,t=e.color,r=e.size,A=e.weight,o=e.extraStyle,i={color:"var(".concat(t,")"),fontSize:r,fontWeight:A};return a.a.createElement("div",{className:"CROWNLabel ".concat(o),style:i},n)};p.defaultProps={text:"I'm a label",size:"22px",color:"--black-1",weight:"400",extraStyle:""};var f=p,b=function(e){var n=e.isChecked,t=e.onChange,r=e.text,A=e.stateName,o=e.extraStyle,i=u();return a.a.createElement("div",{className:"CROWNSwitch ".concat(o)},a.a.createElement("input",{type:"checkbox",id:i,className:"checkbox colorSwitch",defaultChecked:n,onChange:function(){return t({stateName:A,value:!n})}}),a.a.createElement("label",{htmlFor:i,className:"switch colorSwitch"}),r&&a.a.createElement("div",{className:"Label"},a.a.createElement(f,{size:"small",text:r,color:"--black-1"})))};b.defaultProps={onChange:function(){},text:null,extraStyle:""};var h=b,m=function(e){var n=e.text,t=e.onChange,r=e.isChecked,A=e.stateName,o=e.extraStyle;return a.a.createElement("div",{className:"CROWNCheckBox ".concat(o)},a.a.createElement("input",{id:u(),type:"checkbox",className:"Active",onChange:function(){return t({stateName:A,value:!r})},checked:r}),n&&a.a.createElement("div",{className:"Label"},a.a.createElement(f,{size:"small",text:n,color:"--black-1"})))};m.defaultProps={text:null,isChecked:!1,onChange:function(){},extraStyle:""};var x=m;function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,n){return(v=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function B(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,r=w(e);if(n){var a=w(this).constructor;t=Reflect.construct(r,arguments,a)}else t=r.apply(this,arguments);return k(this,t)}}function k(e,n){return!n||"object"!==g(n)&&"function"!=typeof n?E(e):n}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&v(e,n)}(o,e);var n,t,r,A=B(o);function o(){var e;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,o),(e=A.call(this)).state={isActive:!1},e._toggleActive=e._toggleActive.bind(E(e)),e}return n=o,(t=[{key:"_toggleActive",value:function(){this.setState({isActive:!this.state.isActive})}},{key:"render",value:function(){var e=this,n=this.props,t=n.optionSelected,r=n.options,A=n.onChange,o=n.stateName,i=n.extraStyle;return a.a.createElement("div",{className:"CROWNDropDown ".concat(i)},a.a.createElement("div",{className:"Options",onClick:function(){return e._toggleActive()}},t),this.state.isActive&&a.a.createElement("div",{className:"ListContent"},r.map((function(n,t){return a.a.createElement("div",{className:"Option",key:"option-".concat(t),onClick:function(){return e.setState({isActive:!1},A({stateName:o,value:n}))}},n)}))))}}])&&y(n.prototype,t),r&&y(n,r),o}(r.Component);R.defaultProps={options:["Button","Common","DropDown","Image","InputText","Label","RadioButton","Switch"],onChange:function(){},extraStyle:""};var F=R,N=function(e){var n=e.options,t=e.optionSelected,r=e.onChange,A=e.stateName,o=e.extraStyle;return a.a.createElement("div",{className:"CROWNRadioButton ".concat(o),role:"radiogroup","aria-labelledby":"bulgy-radios-label"},n.map((function(e){return a.a.createElement("label",null,a.a.createElement("input",{type:"radio",value:e.id,checked:t===e.id,onChange:function(){return r({stateName:A,value:e.id})}}),a.a.createElement("span",{className:"Radio"}),a.a.createElement("div",{className:"Label"},a.a.createElement(f,{size:"small",text:e.label,color:"--black-1"})))})))};N.defaultProps={options:[{label:"Si",id:"si_option"},{label:"No",id:"no_option"},{label:"Tal vez",id:"tal_vez_option"}],onChange:function(e){return console.log(e)},extraStyle:""};var O=N,S=function(e){var n=e.header,t=e.body,r=e.extraStyle;return a.a.createElement("table",{className:"CROWNTable ".concat(r)},a.a.createElement("thead",null,a.a.createElement("tr",{className:"Header"},n.map((function(e){return a.a.createElement("th",null,e)})))),a.a.createElement("tbody",null,t.map((function(e){return a.a.createElement("tr",{className:"Body"},e.map((function(e){return a.a.createElement("td",null,e)})))}))))};S.defaultProps={header:["NOMBRE","APELLIDO","CARRERA","PROMEDIO"],body:[["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"],["Fernando","Garcia","Sistemas","100"]],extraStyle:""};var W=S,D=function(e){return e.show&&a.a.createElement("div",{className:"CROWNLoader"},a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null))};D.defaultProps={show:!1};var M=D,j=function(e){var n=e.text,t=e.onClick,r=e.color,A=e.textColor,o=e.borderColor,i=e.type,l=e.shape,c=e.shadow,C=e.extraStyle,d={boxShadow:c&&"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)"};switch(i){case"Secondary":d.border=" 2px solid var(".concat(o,")"),d.color="var(".concat(A,")");break;case"Text":d.border="none",d.color="var(".concat(A,")"),d.boxShadow="none";break;default:d.backgroundColor="var(".concat(r,")"),d.color="var(".concat(A,")")}return a.a.createElement("a",{className:"CROWNButton ".concat(l," ").concat(C),style:d,onClick:t},n)};j.defaultProps={text:"Click Me!",onClick:function(){return console.log("You clicked on me!")},color:"--blue-4",textColor:"--white",borderColor:"--blue-4",type:"Default",shape:"Round",shadow:!0,extraStyle:""};var I=j,_=function(e){var n=e.show,t=e.onClose,r=e.onActionAcepted,A=e.onActionRejected,o=e.child,i=e.title,l=e.content,c=e.extraStyle;return n&&a.a.createElement("div",{className:"CROWNModal ".concat(c)},a.a.createElement("div",{className:"ContainerModal"},a.a.createElement("div",{className:"Modal"},null!==o?o:a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"Close",onClick:function(){return t()}},"X"),a.a.createElement("div",{className:"Content"},a.a.createElement("div",{className:"Title"},i),a.a.createElement("div",{className:"Text"},l),a.a.createElement("div",{className:"ButtonArea"},a.a.createElement(I,{shape:"Square",color:"--red-1",text:"Calcelar",type:"Secondary",borderColor:"--red-1",textColor:"--red-1",onClick:function(){return r()}}),a.a.createElement(I,{shape:"Square",color:"--teal-1",text:"Aceptar",onClick:function(){return A()}})))))))};_.defaultProps={show:!1,onClose:function(){},onActionAcepted:function(){},onActionRejected:function(){},child:null,title:"Card Title",content:"Card Content  ---- Card Content ---- Card Content",extraStyle:""};var L=_,U=function(e){var n=e.src,t=e.title,r=e.content,A=e.buttonConfig,o=e.customButton,i=e.extraStyle;return a.a.createElement("div",{className:"CROWNCard ".concat(i)},a.a.createElement("div",{className:"Card",style:{backgroundImage:"url(".concat(n,")"),backgroundPosition:"center",backgroundRepeat:"no-repeat",backgroundSize:"cover",position:"relative"}},a.a.createElement("div",{className:"Content"},a.a.createElement("div",{className:"Title"},t),a.a.createElement("div",{className:"ContentCard"},r),a.a.createElement("div",{className:"Others"},o||a.a.createElement(I,A)))))};U.defaultProps={src:"linear-gradient(var(--red-4), var(--pink-1))",title:"Card Title",content:"Card Content  ---- Card Content ---- Card Content  ---- Card Content ---- Card Content  ---- Card Content ---- Card Content  ---- Card Content ----",buttonConfig:{shape:"Square",color:"--gray-blue-3",text:"Aceptar",onClick:function(){}},customButton:!1,extraStyle:""};var P=U,G=function(e){var n=e.placeholder,t=e.value,r=e.onChange,A=e.type,o=e.title,i=e.extraStyle,l=e.stateName;return o?a.a.createElement(a.a.Fragment,null,a.a.createElement(f,{size:"small",text:n,color:"--black-1"}),a.a.createElement("input",{className:"CROWNInputText ".concat(i),type:A,value:t,onChange:function(e){return r({stateName:l,value:e.target.value})},name:l})):a.a.createElement("input",{placeholder:n,className:"CROWNInputText ".concat(i),type:A,value:t,onChange:function(e){return r({stateName:l,value:e.target.value})},name:l})};G.defaultProps={placeholder:"Write on me..!",onChange:function(){},namestate:"input",type:"text",title:!1,extraStyle:""};var T=G,z=function(e){var n=e.src,t=e.frame,r=e.shadow,A=e.size,o=e.extraStyle,i=n?"url(".concat(n,")"):"linear-gradient(45deg, var(--red-1), var(--pink-1))",l=a.a.createElement("div",{className:"Image",style:{backgroundImage:i,backgroundPosition:"center",backgroundRepeat:"no-repeat",backgroundSize:"cover",position:"relative"}});return t?a.a.createElement("div",{className:"CROWNImage ".concat(r?"Shadow":""," ").concat(o),style:A},a.a.createElement("div",{className:"ImageBlur",style:{backgroundImage:i,backgroundPosition:"center",backgroundRepeat:"no-repeat",backgroundSize:"cover",position:"relative"}},a.a.createElement("div",{className:"Blur"},l))):a.a.createElement("div",{className:"CROWNImage ".concat(r?"Shadow":""," ").concat(o),style:A},l)};z.defaultProps={shadow:!0,frame:!0,size:{width:"300px",height:"350px"},extraStyle:""};var q=z;t(6),t(8)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,